version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: slack-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-slackuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-slackpass}
      POSTGRES_DB: ${POSTGRES_DB:-slackclone}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - slack-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: slack-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - slack-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: slack-minio-prod
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - slack-network
    restart: unless-stopped
    command: server /data --console-address ":9001"

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: slack-backend-prod
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://slackuser:slackpass@postgres:5432/slackclone
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key-change-in-production}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - slack-network
    restart: unless-stopped

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: slack-frontend-prod
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_SOCKET_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - slack-network
    restart: unless-stopped

networks:
  slack-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
